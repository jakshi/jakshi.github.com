<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[DevOp's Blog]]></title>
  <link href="http://jakshi.github.com/atom.xml" rel="self"/>
  <link href="http://jakshi.github.com/"/>
  <updated>2015-03-18T19:51:54+08:00</updated>
  <id>http://jakshi.github.com/</id>
  <author>
    <name><![CDATA[jakshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2014 year sum up]]></title>
    <link href="http://jakshi.github.com/blog/2015/01/01/2014-year-sum-up/"/>
    <updated>2015-01-01T07:52:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2015/01/01/2014-year-sum-up</id>
    <content type="html"><![CDATA[<ul>
<li>5 important things that I did this year:

<ul>
<li>Got Married.</li>
<li>Learnt how to <a href="http://jakshi.github.com/images/me_on_the_motorcycle.jpg">drive a motorcycle</a>. Bought my first motorcycle.</li>
<li>live whole year in Asia, in Thailand, Krabi and Malaysia, Cyberjaya during 2013/2014 year.</li>
<li>Finish 2 <a href="https://www.coursera.org/">Coursera</a> courses <a href="https://www.coursera.org/course/webapplications">Web Application Architectures</a> and <a href="https://www.coursera.org/course/behavioralecon">A Beginner&#8217;s Guide to Irrational Behavior</a></li>
<li>I learnt TDD approach to writing code, and applied it in practice. It&#8217;s just awesome.</li>
</ul>
</li>
</ul>


<!-- more -->


<ul>
<li>Most interesting/inspiring people I met this year:

<ul>
<li>Kaveh Mousavi Zamani - Software developer and DevOps engineer. He tought me that simplicity is a virtue for DevOps and complexity can kill your infrastructure projects.</li>
<li>Shuwn Yuan Tee - Software developer and DBA. She reminded me that you should never stop learning. It&#8217;s amazing how much can people learn if he/she doesn&#8217;t waste his/her time.</li>
<li>Dmitriy Paramonov - Entrepreneur. He showed me that it&#8217;s more profitable to sell tools/supplies that help other people to do their work, than do that work by yourself.</li>
</ul>
</li>
<li>people that change my way to thinking this year:

<ul>
<li>Stephen Nelson-Smith - he tought me a lot about TDD. It changes my whole thinking about software development (in a good way). I understand that you can get confidence in your code.</li>
</ul>
</li>
<li>Two new hobbies this year:

<ul>
<li>Learning programming on <a href="https://www.codeschool.com">codeschool</a></li>
<li>Learn how to maintain and customizing my motorcycle</li>
</ul>
</li>
<li>Two might-have-been dream in this year:

<ul>
<li>Buy a car</li>
<li>Travel to Indonesia</li>
<li>Travel to South-America</li>
</ul>
</li>
</ul>


<h1>What did not go well</h1>

<p>I:</p>

<ul>
<li>still have not much money so a lot of plans still postponed</li>
<li>often find hard to concentrate on work</li>
<li>still not very good in choosing priorities</li>
<li>spend a lot of time on garabage things, like reading blogs, news and so on useless stuff</li>
<li>don&#8217;t pay enough attention to sport activity</li>
<li>I spent a lot of time learning  ไทย, but I still not even close to speaking this language.</li>
<li>I got two good job offers simultaneously and It was a frustrating experience, to choose between two interesting projects.</li>
</ul>


<h1>What went well</h1>

<p>I:</p>

<ul>
<li>I traveled a lot. I lived one month in Malaysia, Cyberjaya. also I traveled by car to Penang island in Malaysia again. I traveled to Thailand, ko Samui (~300 km) on my motorcycle.</li>
<li>I did more programming, My developer skills became better. I learnt some RoR, Javascript basics and my Ruby is almost fluent.</li>
<li>I leant a lot about unit and integration testing, TDD and applying this to writing chef cookbooks.</li>
<li>Enhance my <a href="http://www.opscode.com/chef/">opscode chef</a> cooking skills even more.</li>
<li>I bought a notebook with FullHD IPS matrix, why I didn&#8217;t to this before? It&#8217;s just great.</li>
</ul>


<h1>What I would like to achieve in new year?</h1>

<ul>
<li>I want to buy and learn to drive more powerful motorcycle, 50+ h.p.</li>
<li>I want to start programming RoR and/or javascript for money</li>
<li>I want to have stable 50$ per hour rates</li>
<li>I want to start speaking on a new language</li>
<li>I want to visit 3 new foreign countries</li>
<li>I want to start rock climbing again</li>
<li>I want to make my eyesight better than this year.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef shortcuts]]></title>
    <link href="http://jakshi.github.com/blog/2014/11/21/chef-shortcuts/"/>
    <updated>2014-11-21T13:16:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2014/11/21/chef-shortcuts</id>
    <content type="html"><![CDATA[<h1>Add a recipe to the end of run list on certain environment</h1>

<p>Test run, not actually add a recipe:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife exec -E 'nodes.transform ("chef_environment:beta") {|n| puts n.run_list &lt;&lt; "recipe[logentries_ng]" }'</span></code></pre></td></tr></table></div></figure>


<p>Add a recipe for real:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife exec -E 'nodes.transform ("chef_environment:beta") {|n| puts n.run_list &lt;&lt; "recipe[logentries_ng]"; n.save }'</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h1>Add a recipe to the beginning of run list on certain environment</h1>

<p>Test run, not actually add a recipe:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife exec -E 'nodes.transform ("chef_environment:qa01") {|n| old_rl = n.run_list.to_a; puts n.run_list(["recipe[datadog::dd-handler]"] + old_rl) }'</span></code></pre></td></tr></table></div></figure>


<p>Add a recipe for real:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife exec -E 'nodes.transform ("chef_environment:qa01") {|n| old_rl = n.run_list.to_a; puts n.run_list(["recipe[datadog::dd-handler]"] + old_rl); n.save }'</span></code></pre></td></tr></table></div></figure>


<h1>Insert a recipe in the second position of run list on certain environment</h1>

<p>Test run, not actually add a recipe:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife exec -E 'nodes.transform ("chef_environment:qa04") {|n| old_rl = n.run_list.to_a; puts n.run_list(old_rl[0..0] + ["recipe[datadog::dd-handler]"] + old_rl[1..-1]) }'</span></code></pre></td></tr></table></div></figure>


<p>Add a recipe for real:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife exec -E 'nodes.transform ("chef_environment:qa04") {|n| old_rl = n.run_list.to_a; puts n.run_list(old_rl[0..0] + ["recipe[datadog::dd-handler]"] + old_rl[1..-1]); n.save }'</span></code></pre></td></tr></table></div></figure>


<h1>Remove a recipe from run list on certain environment</h1>

<p>Test run, not actually remove a recipe:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife exec -E 'nodes.transform ("chef_environment:qa02") {|n| puts n.run_list.remove ("recipe[logentries_ng]") }'</span></code></pre></td></tr></table></div></figure>


<p>Remove a recipe for real:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife exec -E 'nodes.transform ("chef_environment:qa02") {|n| puts n.run_list.remove ("recipe[logentries_ng]"); n.save }'</span></code></pre></td></tr></table></div></figure>


<h1>Execute chef-client on all nodes in specific environment</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife ssh 'chef_environment:qa02' 'sudo chef-client'</span></code></pre></td></tr></table></div></figure>


<h1>Search for nodes in specific environment and having specific recipe</h1>

<p>And show only node names (-i option)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife search node "chef_environment:production AND recipes:web_server" -i</span></code></pre></td></tr></table></div></figure>


<h1>More shotcuts</h1>

<p>Do you want even more shortcuts? Read nice article: <a href="http://dougireton.com/blog/2013/02/03/knife-tricks/">Knife Tricks</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rewriting git commit]]></title>
    <link href="http://jakshi.github.com/blog/2014/07/14/rewriting-git-commit/"/>
    <updated>2014-07-14T00:13:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2014/07/14/rewriting-git-commit</id>
    <content type="html"><![CDATA[<p>Sometimes when you commit something nasty, you need to rewrite it. Or you may need to split commit into parts. Or whatever.</p>

<p>Use case: You want to remove some files that you added with your commit.</p>

<!-- more -->


<h1>Find the commit</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short</span></code></pre></td></tr></table></div></figure>


<p>Let it be <code>4ca80f0</code>.</p>

<h1>Remove files that you don&#8217;t want in the commit.</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git rebase -i 4ca80f0~1</span></code></pre></td></tr></table></div></figure>


<p>Replace pick with edit and save file.</p>

<p>Then you need to unstage files in the commit:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git reset HEAD^</span></code></pre></td></tr></table></div></figure>


<p>now all files are in state before that commit, and you can add/remove/stage them.</p>

<p>to undo <code>windows</code> file changes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout -- windows</span></code></pre></td></tr></table></div></figure>


<p>or if this is a new file you can just delete it</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rm -rf windows</span></code></pre></td></tr></table></div></figure>


<p>also you can split this commit into several commits.</p>

<h1>Change commit message</h1>

<p>Now you probably want to change commit message:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git commit --amend</span></code></pre></td></tr></table></div></figure>


<h1>Apply changes</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git rebase --continue</span></code></pre></td></tr></table></div></figure>


<h1>Profit!</h1>

<p>Enjoy you splitted/amended commit.</p>

<h1>References</h1>

<ul>
<li><a href="http://stackoverflow.com/questions/11729030/how-do-i-selectively-revert-some-changes-in-a-single-commit-to-a-single-file">Stackoverflow: How do I selectively revert some changes in a single commit to a single file?</a></li>
<li><a href="http://stackoverflow.com/questions/4795600/reverting-part-of-a-commit-with-git/4796144#4796144">Stackoverflow: Reverting part of a commit with git</a></li>
<li><a href="http://stackoverflow.com/questions/1109069/git-selective-revert-local-changes-from-a-file">Stackoverflow: git selective revert local changes from a file</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Accessing chef attributes in serverspec tests]]></title>
    <link href="http://jakshi.github.com/blog/2014/05/12/accessing-chef-attributes-in-serverspec-tests/"/>
    <updated>2014-05-12T01:45:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2014/05/12/accessing-chef-attributes-in-serverspec-tests</id>
    <content type="html"><![CDATA[<p>I presume that you are familiar with:</p>

<ul>
<li>Chef</li>
<li>test-kitchen</li>
<li>serverspec</li>
</ul>


<p>When you write serverspec integration tests, it would be great to have access to chef attributes of cookbook that you&#8217;re testing.
There&#8217;s a fast and simple way to do this.</p>

<!-- more -->


<h1>Introduction</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat attributes/default.rb</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>override['backup']['dependencies'] = [['fog'],['aws-s3']]</span></code></pre></td></tr></table></div></figure>


<p>Let&#8217;s say we want this attribute in your serverspec tests.</p>

<p>How can we do that?</p>

<ul>
<li>Dump chef attributes to JSON file with helper cookbook</li>
<li>Load this file from serverspec tests</li>
</ul>


<h1>Dump chef attributes</h1>

<h2>Create fixture cookbook</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>emacs test/fixtures/cookbooks/test-helper/metadata.rb</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>name             'test-helper'
</span><span class='line'>maintainer       'John Smith'
</span><span class='line'>maintainer_email 'john@example.com'
</span><span class='line'>license          'Apache 2.0'
</span><span class='line'>description      'Dumps chef node data to json file'
</span><span class='line'>long_description IO.read(File.join(File.dirname(__FILE__), 'README.md'))
</span><span class='line'>version          '0.0.1'
</span><span class='line'>
</span><span class='line'>recipe 'default', 'Dumps chef node data to json file'
</span><span class='line'>
</span><span class='line'>%w{ ubuntu debian }.each do |os|
</span><span class='line'>  supports os
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>emacs test/fixtures/cookbooks/test-helper/recipes/default.rb</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chef_gem 'activesupport'
</span><span class='line'>
</span><span class='line'>require 'pathname'
</span><span class='line'>require 'active_support/core_ext/hash/deep_merge'
</span><span class='line'>
</span><span class='line'>directory '/tmp/serverspec' do
</span><span class='line'>  recursive true
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>file '/tmp/serverspec/node.json' do
</span><span class='line'>  owner "root"
</span><span class='line'>  mode "0400"
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>log "Dumping attributes to '/tmp/serverspec/node.json."
</span><span class='line'>
</span><span class='line'>ruby_block "dump_node_attributes" do
</span><span class='line'>  block do
</span><span class='line'>    require 'json'
</span><span class='line'>
</span><span class='line'>    attrs = {}
</span><span class='line'>
</span><span class='line'>    attrs = attrs.deep_merge(node.default_attrs) unless node.default_attrs.empty?
</span><span class='line'>    attrs = attrs.deep_merge(node.normal_attrs) unless node.normal_attrs.empty?
</span><span class='line'>    attrs = attrs.deep_merge(node.override_attrs) unless node.override_attrs.empty?
</span><span class='line'>
</span><span class='line'>    recipe_json = "{ \"run_list\": \[ "
</span><span class='line'>    recipe_json &lt;&lt; node.run_list.expand(node.chef_environment).recipes.map! { |k| "\"#{k}\"" }.join(",")
</span><span class='line'>    recipe_json &lt;&lt; " \] }"
</span><span class='line'>    attrs = attrs.deep_merge(JSON.parse(recipe_json))
</span><span class='line'>
</span><span class='line'>    File.open('/tmp/serverspec/node.json', 'w') { |file| file.write(JSON.pretty_generate(attrs)) }
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "This a cookbook for dumping chef node attributes to specific location to json formated file." &gt; test/fixtures/cookbooks/test-helper/README.md</span></code></pre></td></tr></table></div></figure>


<h2>Add it to .kitchen.yml</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>emacs .kitchen.yml</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>driver:
</span><span class='line'>  name: digitalocean
</span><span class='line'>  region: amsterdam 2
</span><span class='line'>  flavor: 512MB
</span><span class='line'>
</span><span class='line'>provisioner:
</span><span class='line'>  name: chef_solo
</span><span class='line'>
</span><span class='line'>platforms:
</span><span class='line'>  - name: ubuntu-12.04
</span><span class='line'>
</span><span class='line'>suites:
</span><span class='line'>  - name: default
</span><span class='line'>    run_list:
</span><span class='line'>      - recipe[my_cookbook::default]
</span><span class='line'>      - recipe[test-helper::default]
</span><span class='line'>    attributes:
</span></code></pre></td></tr></table></div></figure>


<h2>Add cookbook helper to Berksfile</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>emacs Berksfile</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source "http://api.berkshelf.com"
</span><span class='line'>
</span><span class='line'>metadata
</span><span class='line'>
</span><span class='line'>group :integration do
</span><span class='line'>  cookbook 'test-helper', path: 'test/fixtures/cookbooks/test-helper'
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>berks update</span></code></pre></td></tr></table></div></figure>


<h1>Load chef attributes</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>emacs test/integration/default/serverspec/spec_helper.rb</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require 'serverspec'
</span><span class='line'>require 'pathname'
</span><span class='line'>require 'net/http'
</span><span class='line'>require 'net/smtp'
</span><span class='line'>require 'json'
</span><span class='line'>
</span><span class='line'>set :backend, :exec
</span><span class='line'>
</span><span class='line'>$node = ::JSON.parse(File.read('/tmp/serverspec/node.json'))</span></code></pre></td></tr></table></div></figure>


<h1>Use chef attributes in tests</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require 'spec_helper'
</span><span class='line'>
</span><span class='line'>describe 'my_cookbook' do
</span><span class='line'>
</span><span class='line'>  context 'dependencies recipe. It' do
</span><span class='line'>    $node['backup']['dependencies'].each do |bgem|
</span><span class='line'>      it "installs backup gem dependency: #{bgem[0]}" do
</span><span class='line'>        expect(package bgem[0]).to be_installed.by('gem')
</span><span class='line'>      end
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h1>Conclusion</h1>

<p>if you execute:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kitchen verify</span></code></pre></td></tr></table></div></figure>


<p>you should see:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>my_cookbook
</span><span class='line'>  dependencies recipe. It       
</span><span class='line'>    installs backup gem dependency: fog       
</span><span class='line'>    installs backup gem dependency: aws-s3       </span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef cookbook templating with cookiecutter]]></title>
    <link href="http://jakshi.github.com/blog/2014/05/03/chef-cookbook-templating-with-cookiecutter/"/>
    <updated>2014-05-03T01:21:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2014/05/03/chef-cookbook-templating-with-cookiecutter</id>
    <content type="html"><![CDATA[<p>One of the challenges in chef cookbook development - create a comprehensive cookbook template.</p>

<p>Good cookbook template might:</p>

<ul>
<li>standartize your cookbooks</li>
<li>fill them with convenient predefinitions</li>
<li>save your time.</li>
</ul>


<p>If you are not python averse, you could find that <a href="https://github.com/audreyr/cookiecutter">cookiecutter</a> pretty useful tool for creating your cookbooks templates. This article describes my experience in creating chef cookbook template with <a href="https://github.com/audreyr/cookiecutter">cookiecutter</a>.</p>

<!-- more -->


<h1>Cookiecutter in nutshell</h1>

<ul>
<li><a href="https://github.com/audreyr/cookiecutter">cookiecutter</a> is a python based software.</li>
<li>it uses <a href="http://jinja.pocoo.org/">Jinja</a> templating engine</li>
<li>To install cookiecutter read: <a href="http://cookiecutter.readthedocs.org/en/latest/installation.html">Installing Cookiecutter</a>.</li>
<li>On my Ubuntu 12.04 workstation I used <code>pip cookiecutter</code> to install it.</li>
<li>variables defined in <code>cookiecutter.json</code> file in the root of template directories hierarchy</li>
<li>these variables might be used inside files by specifing</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{{cookiecutter.variable_name}}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>these variables might be used as a file or directory names, if you call file or directory like:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{{cookiecutter.variable_name}}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>cookiecutter supports pre and post generate hooks.</li>
<li>hooks might be shell or python scripts, have names <code>pre_gen_project.[sh,py]</code> or <code>post_gen_project.[sh,py]</code>, and should be in hooks dir.</li>
</ul>


<h1>Chef cookbook templating with cookiecutter</h1>

<h2>Create a directory for template</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir chef-cookbook-template
</span><span class='line'>cd chef-cookbook-template</span></code></pre></td></tr></table></div></figure>


<h2>Create a file with template variables</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>emacs cookiecutter.json
</span><span class='line'>{
</span><span class='line'>     "author": "John Smith",
</span><span class='line'>     "email": "cookbooks@example.com",
</span><span class='line'>     "cookbook_name": "",
</span><span class='line'>     "company_name": "Example Ltd",
</span><span class='line'>     "release_date": "2014-04-17",
</span><span class='line'>     "year": "2014",
</span><span class='line'>     "version": "0.0.1"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Value that specified in this file, will be suggested as a default one.</p>

<p>As you see there&#8217;s no value for &#8220;cookbook_name&#8221;. So there will be no default value, you need to specify it every time you create new cookbook from this template.</p>

<h2>Create a templated directory for cookbook</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir "chef-{{cookiecutter.cookbook_name}}"</span></code></pre></td></tr></table></div></figure>


<h2>Create files for your cookbook.</h2>

<p>On this stage you should fill your cookbooks with files that you need in your cookbook template. Use variables when it&#8217;s suitable.</p>

<p>In my cookbook template I added variables to files:</p>

<ul>
<li>attributes/default.rb</li>
<li>README.md</li>
<li>spec/default_spec.rb</li>
<li>metadata.rb</li>
<li>{{cookiecutter.cookbook_name}}.packer</li>
<li>LICENSE</li>
<li>Vagrantfile</li>
<li>.kitchen.yml</li>
<li>test/integration/default/serverspec/localhost/default_spec.rb</li>
<li>recipes/default.rb</li>
</ul>


<h2>Post-create hooks</h2>

<p>It could be anything you want. For example I initialize my cookbook template with git.</p>

<p>In root directory of cookiecutter template add hooks directory.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir hooks
</span><span class='line'>cd hooks
</span><span class='line'>emacs post_gen_project.sh</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>command -v git &gt;/dev/null 2&gt;&1 && git init || { echo &gt;&2 "git init is failed. Probably git is not installed. Install git if it's not installed."; exit 1; }</span></code></pre></td></tr></table></div></figure>


<h1>Usage</h1>

<p>I presume that:</p>

<ul>
<li>you finished your template</li>
<li>and uploaded it to github</li>
</ul>


<h2>Use template from github git repository</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cookiecutter https://github.com/example/my-chef-cookbook-template.git</span></code></pre></td></tr></table></div></figure>


<h2>Use it again.</h2>

<ul>
<li>After first usage template will be copied to ~/.cookiecutter directory.</li>
<li>So to use it again you need to specify template name only:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cookiecutter my-chef-cookbook-template</span></code></pre></td></tr></table></div></figure>


<h2>Update template</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/.cookiecutter/my-chef-cookbook-template
</span><span class='line'>git pull</span></code></pre></td></tr></table></div></figure>


<h2>Use template from local dir</h2>

<ul>
<li>You can just store template in current directory and use it.</li>
<li>Let&#8217;s presume that you have template in <code>my-chef-cookbook-template</code> dir.</li>
<li>Then to use template you just need to execute command:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cookiecutter my-chef-cookbook-template</span></code></pre></td></tr></table></div></figure>


<h1>Tips and tricks</h1>

<ul>
<li>If you want to include in resulting file {{ or/and }}, you can specify them like</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{{'{{'}}</span></code></pre></td></tr></table></div></figure>


<p> or/and</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{{'}}'}}</span></code></pre></td></tr></table></div></figure>


<h1>References</h1>

<ul>
<li><a href="https://github.com/audreyr/cookiecutter">Cookiecutter</a></li>
<li><a href="http://cookiecutter.readthedocs.org/en/latest/installation.html">Installing Cookiecutter</a></li>
<li><a href="http://jinja.pocoo.org/">Jinja</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backup gem and Chef]]></title>
    <link href="http://jakshi.github.com/blog/2014/04/24/backup-gem-and-chef/"/>
    <updated>2014-04-24T12:48:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2014/04/24/backup-gem-and-chef</id>
    <content type="html"><![CDATA[<h1>Intro</h1>

<ul>
<li>There&#8217;s a nice tool for doing fast and easy backup to AWS S3: <a href="http://meskyanichi.github.io/backup/">backup gem</a></li>
<li>There should be done a lot of steps for setup a backup though.</li>
<li>So it could be automated with chef.</li>
<li>In this article I&#8217;ll write log of creation backup gem&#8217;s cookbook.</li>
<li>Essentially this cookbook will install backup gem, that will backup /var/www folder to AWS S3 every day in 01:00. It will store last 14 backups.</li>
</ul>


<!-- more -->


<h1>Chef application cookbook for backup gem</h1>

<h2>Create a cookbook</h2>

<p>   mkdir example-backup
   cd example-backup</p>

<h2>Create metadata</h2>

<pre><code>emacs metadata.rb
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>name             'example-backup'
</span><span class='line'>maintainer       'John Smith'
</span><span class='line'>maintainer_email 'john@example.com'
</span><span class='line'>license          'Apache 2.0'
</span><span class='line'>description      'Installs/Configures example-backup'
</span><span class='line'>long_description IO.read(File.join(File.dirname(__FILE__), 'README.md'))
</span><span class='line'>version          '0.0.1'
</span><span class='line'>
</span><span class='line'>%w{ubuntu}.each do |os|
</span><span class='line'>  supports os
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>depends 'backup', '~&gt; 0.4.0'
</span><span class='line'>depends 'build-essential'
</span><span class='line'>depends 'cron', '= 1.3.8'</span></code></pre></td></tr></table></div></figure>


<ul>
<li>We will use &#8216;backup&#8217; gem for setupping backup.</li>
<li>build-essential is necessary for installing gem&#8217;s native extensions</li>
<li>cron is restricted to 1.3.8 version, because last version of cron (1.3.10) was broken on the moment of writing this article.</li>
<li>This example is for ubuntu 12.04 LTS only</li>
</ul>


<h2>Attributes</h2>

<pre><code>emacs attributes/default.rb
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>default['example']['backup']['s3-bucket'] = 'example.com.backup'
</span><span class='line'>override['build-essential']['compile_time'] = true
</span><span class='line'>override['backup']['dependencies'] = [['fog'],['aws-s3']]
</span><span class='line'>override['backup']['version'] = '4.0.1'
</span><span class='line'>override['backup']['path'] = '/opt/backup'</span></code></pre></td></tr></table></div></figure>


<h2>Templates</h2>

<pre><code>emacs templates/default/config.rb.erb
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># encoding: utf-8
</span><span class='line'>
</span><span class='line'>##
</span><span class='line'># Backup v4.x Configuration
</span><span class='line'>#
</span><span class='line'># Documentation: http://meskyanichi.github.io/backup
</span><span class='line'># Issue Tracker: https://github.com/meskyanichi/backup/issues
</span><span class='line'>root_path '&lt;%= @root_path %&gt;'
</span><span class='line'>tmp_path '&lt;%= @tmp_path %&gt;'
</span><span class='line'>data_path '&lt;%= @data_path %&gt;'</span></code></pre></td></tr></table></div></figure>


<h2>Recipes</h2>

<h3>default</h3>

<pre><code>emacs recipes/default.rb
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>include_recipe 'example-backup::dependencies'
</span><span class='line'>include_recipe 'example-backup::backup'</span></code></pre></td></tr></table></div></figure>


<h3>dependencies</h3>

<p>This recipe is to install dependenices that neccessary for backup gem to functioning.</p>

<pre><code>emacs recipes/dependencies.rb
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>include_recipe 'build-essential'
</span><span class='line'>
</span><span class='line'>%w{ruby1.9.1-full libopenssl-ruby1.9.1 libssl-dev zlib1g-dev}.each do |pkg|
</span><span class='line'>  package(pkg).run_action(:install)
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'># Make ruby19 default ruby interpreter
</span><span class='line'># Ruby 1.8.x on Ubuntu 12.04 LTS have priority 50
</span><span class='line'># Let's setup priority 400 for ruby 1.9.x
</span><span class='line'>bash 'ruby19_by_default' do
</span><span class='line'>  cwd '/tmp'
</span><span class='line'>  code &lt;&lt;-EOH
</span><span class='line'>  update-alternatives --install /usr/bin/ruby ruby /usr/bin/ruby1.9.1 400 --slave /usr/share/man/man1/ruby.1.gz ruby.1.gz /usr/share/man/man1/ruby1.9.1.1.gz --slave /usr/bin/erb erb /usr/bin/erb1.9.1 --slave /usr/share/man/man1/erb.1.gz erb.1.gz /usr/share/man/man1/erb1.9.1.1.gz --slave /usr/bin/irb irb /usr/bin/irb1.9.1 --slave /usr/share/man/man1/irb.1.gz irb.1.gz /usr/share/man/man1/irb1.9.1.1.gz --slave /usr/bin/rdoc rdoc /usr/bin/rdoc1.9.1 --slave /usr/share/man/man1/rdoc.1.gz rdoc.1.gz /usr/share/man/man1/rdoc1.9.1.1.gz --slave /usr/bin/ri ri /usr/bin/ri1.9.1 --slave /usr/share/man/man1/ri.1.gz ri.1.gz /usr/share/man/man1/ri1.9.1.1.gz --slave /usr/bin/testrb testrb /usr/bin/testrb1.9.1 --slave /usr/share/man/man1/testrb.1.gz testrb.1.gz /usr/share/man/man1/testrb1.9.1.1.gz
</span><span class='line'>EOH
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>chef_gem "chef-rewind"
</span><span class='line'>require 'chef/rewind'
</span><span class='line'>
</span><span class='line'>include_recipe 'backup'
</span><span class='line'>
</span><span class='line'>%w{keys .data logs}.each do |dir|
</span><span class='line'>  directory "#{node['backup']['path']}/#{dir}" do
</span><span class='line'>    action :create
</span><span class='line'>    recursive true
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>rewind :template =&gt; "Backup config file" do
</span><span class='line'>  source 'config.rb.erb'
</span><span class='line'>  cookbook_name 'example-backup'
</span><span class='line'>  variables({
</span><span class='line'>    :root_path =&gt; node['backup']['path'],
</span><span class='line'>    :tmp_path =&gt; '/tmp',
</span><span class='line'>    :data_path =&gt; "#{node['backup']['path']}/.data"
</span><span class='line'>  })
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Recipe installs ruby 1.9 and make it default.</li>
<li>I include backup::default recipe, that will install backup, fog and aws-s3 gems, create backup config and some necessary dirs.</li>
<li>Little trick. Last version of backup recipe doesn&#8217;t support backup gem 4.x version.</li>
<li>Difference is in the config file template.</li>
<li>So I substitute backup&#8217;s cookbook config file template (for 3.x version of backup gem) with my own config template for 4.x version of backup gem.</li>
<li>I use chef-rewind gem for that</li>
</ul>


<h3>backup</h3>

<p>Action part of recipe. It will configure backup.</p>

<pre><code>emacs recipes/backup.rb
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>aws = data_bag_item('aws', 'backup')
</span><span class='line'>
</span><span class='line'>backup_model :www do
</span><span class='line'>  description "backup of /var/www folder"
</span><span class='line'>  definition &lt;&lt;-EOS
</span><span class='line'>before do
</span><span class='line'>  require 'aws/s3'
</span><span class='line'>  AWS::S3::Base.establish_connection!(:access_key_id =&gt; '#{aws['aws_access_key_id']}', :secret_access_key =&gt; '#{aws['aws_secret_access_key']}')
</span><span class='line'>  AWS::S3::Bucket.create('#{node['example']['backup']['s3-bucket']}')
</span><span class='line'>  AWS::S3::Base.disconnect!
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>split_into_chunks_of 50
</span><span class='line'>  
</span><span class='line'>store_with S3 do |s3|
</span><span class='line'>  s3.access_key_id = '#{aws['aws_access_key_id']}'
</span><span class='line'>  s3.secret_access_key = '#{aws['aws_secret_access_key']}'
</span><span class='line'>  s3.region = 'us-east-1'
</span><span class='line'>  s3.bucket = '#{node['example']['backup']['s3-bucket']}'
</span><span class='line'>  s3.path = '/'
</span><span class='line'>  s3.keep = 14
</span><span class='line'>  s3.fog_options = {
</span><span class='line'>    :path_style =&gt; true
</span><span class='line'>  }
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>##
</span><span class='line'># Gzip [Compressor]
</span><span class='line'>#
</span><span class='line'>compress_with Gzip
</span><span class='line'>
</span><span class='line'>archive :www do |archive|
</span><span class='line'>  archive.add '/var/www/'
</span><span class='line'>  archive.tar_options '-p'
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>EOS
</span><span class='line'>  schedule({
</span><span class='line'>    :minute =&gt; '0',
</span><span class='line'>    :hour   =&gt; '1',
</span><span class='line'>  })
</span><span class='line'>  cron_options({
</span><span class='line'>    :path =&gt; '/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin'
</span><span class='line'>  })
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<ul>
<li>I get aws credentials from aws data bag.</li>
<li>They could be loaded from other source, like attributes, anything you like.</li>
<li>In backup model I create a before hook that will create amazon bucket for backups in case it doesn&#8217;t exist.</li>
<li>Then backup resource just describe backupping /var/www to Amazon S3 bucket, keep 14 backup, start every day on 01:00 AM.</li>
</ul>


<h2>Usage</h2>

<ul>
<li>I presume that you use chef-server and you already have some chef repository, like <code>example-chef-repo</code>.</li>
<li>Fill aws data bag with credentials</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir -p example-chef-repo/data_bags/aws
</span><span class='line'>emacs example-chef-repo/data_bags/aws/backup.json
</span><span class='line'>
</span><span class='line'>{
</span><span class='line'>  "id": "backup",
</span><span class='line'>  "aws_access_key_id": "AWS_ACCESS_KEY",
</span><span class='line'>  "aws_secret_access_key": "AWS_SECRET_KEY"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>It&#8217;s better to use AWS_ACCESS_KEY and AWS_SECRET_KEY credentials of IAM user that has access to S3 only.</li>
<li>Upload that data bag to your chef-server</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife data bag create aws
</span><span class='line'>knife data bag from file aws backup.json</span></code></pre></td></tr></table></div></figure>


<ul>
<li>If you don&#8217;t have chef-server, rewrite recipe to use attributes, and set AWS credentials through attributes.</li>
<li>And That&#8217;s it - just add example-backup to your node run_list.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>knife node run_list add node_name 'recipe[example-backup]'</span></code></pre></td></tr></table></div></figure>


<ul>
<li>And run <code>chef-client</code> on the node.</li>
</ul>


<h1>References</h1>

<h2>cookbooks</h2>

<ul>
<li><a href="https://github.com/gofullstack/backup-cookbook">backup cookbook on github</a></li>
<li><a href="https://github.com/damm/backup">backup lwrp cookbook on github</a></li>
<li><a href="https://github.com/opscode-cookbooks/cron">cron cookbook on github</a></li>
</ul>


<h2>gems</h2>

<h3>chef-rewind gem</h3>

<ul>
<li><a href="https://github.com/bryanwb/chef-rewind">chef-rewind gem on github</a></li>
</ul>


<h3>backup gem</h3>

<ul>
<li><a href="http://meskyanichi.github.io/backup/v4/">backup gem v4.x documentation</a></li>
</ul>


<h3>aws-s3 gem</h3>

<ul>
<li><a href="http://rubydoc.info/gems/aws-s3/0.6.3/frames">AWS::S3 module documentation</a></li>
<li><a href="http://rubydoc.info/gems/aws-s3/0.6.3/AWS/S3/Service">AWS::S3::Service class documentation</a></li>
<li><a href="http://rubydoc.info/gems/aws-s3/0.6.3/AWS/S3/Bucket">AWS::S3::Bucket class documentation</a></li>
</ul>


<h3>test-kitchen</h3>

<ul>
<li><a href="https://github.com/test-kitchen/test-kitchen">test-kitchen gem on github</a></li>
<li><a href="https://github.com/test-kitchen/kitchen-digitalocean">kitchen-digital ocean driver on github</a></li>
</ul>


<h3>berkshelf</h3>

<ul>
<li><a href="http://berkshelf.com/">berkshelf gem documentation</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rewriting your email in git commits]]></title>
    <link href="http://jakshi.github.com/blog/2014/01/25/rewriting-your-email-in-git-commits/"/>
    <updated>2014-01-25T18:57:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2014/01/25/rewriting-your-email-in-git-commits</id>
    <content type="html"><![CDATA[<p>Sometimes you need to rewrite your email in your commits in some git repository.
Do it with command:</p>

<pre><code>git filter-branch --env-filter 'if [ $GIT_AUTHOR_EMAIL = bad@email ]; then GIT_AUTHOR_EMAIL=correct@email; fi; export GIT_AUTHOR_EMAIL'
</code></pre>

<p>For your collaborators this operatioin might be dangerous. According to <a href="http://stackoverflow.com/users/46058/jakub-narebski">Jakub Narębski</a> collaborators will need to:</p>

<ul>
<li>if they didn&#8217;t base their work on history pre-rewrite, just <code>git reset --hard origin/master</code> or just <code>git pull origin</code> (which should fast-forward).</li>
<li>If they based their change, they have to rebase using <code>git rebase origin/master</code> or just <code>git pull --rebase origin</code></li>
</ul>


<p>More info:</p>

<ul>
<li><a href="http://stackoverflow.com/questions/3401732/rewrite-author-in-history">Stackoverflow: Rewrite author in history</a></li>
<li><a href="http://git-scm.com/book/ch6-4.html">Pro Git Book: 6.4 Git Tools - Rewriting History</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2013 year sum up]]></title>
    <link href="http://jakshi.github.com/blog/2013/12/30/2013-year-sum-up/"/>
    <updated>2013-12-30T11:52:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2013/12/30/2013-year-sum-up</id>
    <content type="html"><![CDATA[<ul>
<li>5 important things that I did this year:

<ul>
<li>Learn how to drive a car.</li>
<li>go to second big travel to Asia, living in Thailand, Krabi during 2013/2014 winter.</li>
<li>go for two short travels to Malaysia. By plane from Ko Samui to Kuala Lumpur, by car from Krabi to Penang island.</li>
<li>go for short travel to Germany.</li>
<li>Finish <a href="https://www.coursera.org/course/introfinance">Introduction to Finance course</a> on <a href="https://www.coursera.org/">Coursera</a></li>
</ul>
</li>
</ul>


<!-- more -->


<ul>
<li>Most interesting/inspiring people I met this year:

<ul>
<li>Sergey Balbeko - IT infrastructure developer, hipster. He shows me how strong you need to crave for new knowledge. That it&#8217;s very important to constantly develope yourself.</li>
<li>Anzhela Piage - Entrepreneur, psychologist. She shows me how important to think about win-win strategy not only with people, but with all the world around us.</li>
<li>Evgeniy Kuzmenko - Businessman. Man that shows me how important to be optimistic and persistent.</li>
<li>Tanya Shorokhova - Art director. She inspires me to see <a href="http://jakshi.github.com/images/owl.jpg">owls around us</a>.</li>
<li>Oscar - millionaire from the sratch. Man that prove the idea that win-win strategy better than win-lose one. Also confirm the point that to be rich you need to work a lot and be very persistent.</li>
</ul>
</li>
<li>people that change my way to thinking this year:

<ul>
<li>Sergey Balbeko - He inspires me to be more open-minded about IT world and I learnt that social interaction is important (more important that I thought before).</li>
</ul>
</li>
<li>Two new hobbies this year:

<ul>
<li>Learning programming on codecademy</li>
<li>Learning Thai language</li>
</ul>
</li>
<li>Two might-have-been dream in this year:

<ul>
<li>Buy an apartment</li>
<li>Trip to Europe</li>
<li>Travel to South-America</li>
</ul>
</li>
</ul>


<h1>What did not go well</h1>

<p>I:</p>

<ul>
<li>still have not much money so a lot of plans still postponed</li>
<li>often find hard to concentrate on work</li>
<li>still not very good in choosing priorities</li>
<li>spend a lot of time on garabage things, like reading blogs, news and so on useless stuff</li>
<li>don&#8217;t pay enough attention to sport activity</li>
</ul>


<h1>What went well</h1>

<p>I:</p>

<ul>
<li>learnt how to <a href="http://jakshi.github.com/images/me_and_a_car.jpg">drive a car</a>, I drove sedan, crossover, pick-up. In city, town, rural roads, highways.</li>
<li>traveled a lot, it was life changing experience! I traveled more than last year, because I can drive a car now. I was in several national parks in Krabi province and traveled by car to Penang island in Malaysia.</li>
<li>was programming more, My developer skills became better, I learnt basics of Python, Javascript and my Ruby is almost fluent already.</li>
<li>I learnt basics of CSS and HTML.</li>
<li>finished <a href="https://www.coursera.org/course/introfinance">Introduction to Finance course</a> on <a href="https://www.coursera.org/">Coursera</a> and got that to learn good - you need to enjoy it, learning mood is important.</li>
<li>Enhance my <a href="http://www.opscode.com/chef/">opscode chef</a> cooking skills even more.</li>
<li>learnt how to read ไทย, and now I know about 600 Thai words. Though I understand now that it&#8217;s not a sprint - it&#8217;s a marathon.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using your favourite editor for remote pair programming]]></title>
    <link href="http://jakshi.github.com/blog/2013/07/19/using-your-favourite-editor-for-remote-pair-programming/"/>
    <updated>2013-07-19T20:19:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2013/07/19/using-your-favourite-editor-for-remote-pair-programming</id>
    <content type="html"><![CDATA[<p>I Found an interesting service for pair programming: <a href="https://floobits.com/">Floodbits</a>.</p>

<ul>
<li>Emacs, VIM, sublime text supported with plugins.</li>
<li>Private workspaces are paid.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resolving `nf_conntrack: table full, dropping packet` messages]]></title>
    <link href="http://jakshi.github.com/blog/2013/06/16/resolving-nf-conntrack-table-full/"/>
    <updated>2013-06-16T13:55:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2013/06/16/resolving-nf-conntrack-table-full</id>
    <content type="html"><![CDATA[<p>Just a quick note:</p>

<p>Good article about <a href="http://pc-freak.net/blog/resolving-nf_conntrack-table-full-dropping-packet-flood-message-in-dmesg-linux-kernel-log/">Resolving “nf_conntrack: table full, dropping packet.” flood message in dmesg Linux kernel log</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage AWS Elastic IPs with AWS Ruby SDK]]></title>
    <link href="http://jakshi.github.com/blog/2013/06/07/manage-aws-elastic-ips-with-aws-ruby-sdk/"/>
    <updated>2013-06-07T13:48:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2013/06/07/manage-aws-elastic-ips-with-aws-ruby-sdk</id>
    <content type="html"><![CDATA[<p>I tried three ruby libs for managing Elastic IPs for AWS EC2.</p>

<ul>
<li>fog</li>
<li>right_aws</li>
<li>Official Ruby AWS SDK.</li>
</ul>


<p>I wholeheartedly recommend Official AWS Ruby SDK, as most simple and easy to use.
I also insert several examples of assigning Elastic IPs with AWS Ruby SDK:</p>

<!-- more -->


<h1>Connect to AWS API with AWS Ruby SDK.</h1>

<pre><code>c = AWS::EC2.new(:access_key_id =&gt; "AWS_access_key", :secret_access_key =&gt; "AWS_secret_key", :region =&gt; "us-east-1")
</code></pre>

<h1>Associate Elastic IP</h1>

<p><strong>x.x.x.x</strong> in this example is your Elastic IP address</p>

<pre><code>eip = c.elastic_ips["x.x.x.x"]
eip.associate :instance =&gt; "Your instance id"
</code></pre>

<h1>Disassociate Elastic IP</h1>

<p><strong>x.x.x.x</strong> in this example is your Elastic IP address</p>

<pre><code>eip = c.elastic_ips["x.x.x.x"]
eip.disassociate
</code></pre>

<h1>Further reading</h1>

<ul>
<li><a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html">AWS Documentation: Instance Metadata and User Data</a></li>
<li><a href="https://github.com/madebymade/aws-remap-elastic-ip">AWS Elastic IP remapper</a></li>
</ul>


<h2>AWS Ruby SDK</h2>

<ul>
<li><a href="https://github.com/aws/aws-sdk-ruby/tree/master/samples">GitHub: AWS Ruby SDK Examples</a></li>
<li><a href="http://docs.aws.amazon.com/AWSSdkDocsRuby/latest%0A/DeveloperGuide/ruby-dg-setup.html">AWS Docs: AWS Ruby SDK Getting Started</a></li>
<li><a href="http://docs.aws.amazon.com/AWSRubySDK/latest/frames.html">AWS Docs: AWS Ruby SDK</a></li>
<li><a href="http://docs.aws.amazon.com/AWSRubySDK/latest/AWS/EC2/ElasticIpCollection.html">AWS Docs: AWS Ruby SDK Class: AWS::EC2::ElasticIpCollection</a></li>
<li><a href="http://docs.aws.amazon.com/AWSRubySDK/latest/AWS/EC2/ElasticIp.html">AWS Docs: AWS Ruby SDK Class: AWS::EC2::ElasticIp</a></li>
<li><a href="http://docs.aws.amazon.com/AWSRubySDK/latest/AWS/Core/Configuration.html#initialize-instance_method">AWS Docs: AWS Ruby SDK Class: AWS::Core::Configuration.initialize</a></li>
<li><a href="http://docs.aws.amazon.com/AWSRubySDK/latest/AWS/EC2.html">AWS Docs: AWS Ruby SDK Class: AWS::EC2</a></li>
<li><a href="http://rubygems.org/gems/aws-sdk">RubyGems: AWS Ruby SDK</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage AWS Elastic IPs with fog]]></title>
    <link href="http://jakshi.github.com/blog/2013/06/03/manage-aws-elastic-ips-with-fog/"/>
    <updated>2013-06-03T19:25:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2013/06/03/manage-aws-elastic-ips-with-fog</id>
    <content type="html"><![CDATA[<h1>Connect to AWS API with fog.</h1>

<pre><code>require 'fog'

c = Fog::Compute.new(
                 :provider =&gt; 'AWS',
                 :aws_access_key_id =&gt; 'Your AWS access key',
                 :aws_secret_access_key =&gt; 'Your AWS secret key',
                 :region =&gt; 'us-east-1' )
</code></pre>

<!-- more -->


<h1>Associate Elastic IP</h1>

<pre><code>eip = c.addresses.get('Your elastic IP address')
c.associate_address("Your instance id",nil,nil,eip.allocation_id)
</code></pre>

<h1>Disassociate Elastic IP</h1>

<pre><code>eip = c.describe_addresses('public-ip' =&gt; ['Your elastic IP address'])
disassociate_address(nil,eip[:body]["addressesSet"][0]["associationId"])
</code></pre>

<h1>Association Elastic IP script example.</h1>

<p><strong>assign_eip.rb</strong>:</p>

<pre><code>#!/usr/bin/ruby
# This is a script that assign Elastic IP to current instance.
# Usage:
# You need to fill out config_eip.json config file:
# {
# "aws_access_key": "aws_access_key",
# "aws_secret_key": "aws_secret_key",
# "eip": "x.x.x.x",
# }
#
# Config file should be in the same dir as a script
# then, start script:
# assign_eip.rb
# This will assign x.x.x.x Elastic IP to current instance.

require "rubygems"
require "json"
require "net/http"
require "fog"

# Read config
CONFIG = JSON.parse(IO.read(File.join(File.dirname(__FILE__), 'assign_eip.json')))

# Here we need to get server.id
INSTANCE_HOST = '169.254.169.254'
INSTANCE_ID_URL = '/latest/meta-data/instance-id'
INSTANCE_REGION_URL = '/latest/meta-data/placement/availability-zone'

httpcall = Net::HTTP.new(INSTANCE_HOST)
resp, instance_id = httpcall.get2(INSTANCE_ID_URL)
resp, region = httpcall.get2(INSTANCE_REGION_URL)

# Cut out availability zone marker.
# For example if region == "us-east-1c" after cutting out it will be
# "us-east-1"

region = region[0..-2]

# First we get a connection object from amazon, region is
# required if your instances are in other zone than the
# gem's default one (us-east-1).

c = Fog::Compute.new(
                 :provider =&gt; 'AWS',
                 :aws_access_key_id =&gt; CONFIG['aws_access_key'],
                 :aws_secret_access_key =&gt; CONFIG['aws_secret_key'],
                 :region =&gt; region )

# Then we get Fog::Compute::AWS::Address to get allocation_id of Elastic IP.
# For some reason I failed to make it work with IP address directly.
# if I use Elastic IP instead of allocation id it always returns 400
# Bad Request.

eip = c.addresses.get(CONFIG['eip'])

# Then we accociate Elastic IP with current node.

c.associate_address(instance_id,nil,nil,eip.allocation_id)
</code></pre>

<p><strong>assign_eip.json</strong>:</p>

<pre><code>{
"aws_access_key": "AWS_access_key",
"aws_secret_key": "Your_AWS_secret_key",
"eip": "Elastic IP to assign"
}
</code></pre>

<h1>Further reading</h1>

<ul>
<li><a href="http://rubydoc.info/gems/fog/frames">RubyDoc: fog</a></li>
<li><a href="http://rubydoc.info/github/fog/fog/Fog/Compute/AWS">RubyDoc: Fog::Compute::AWS</a></li>
<li><a href="http://rubydoc.info/github/stesla/fog/Fog/AWS/EC2#associate_address-instance_method">RubyDoc: Fog::AWS::EC2.associate_address</a></li>
<li><a href="http://rubydoc.info/github/fog/fog/Fog/Compute/AWS/Addresses">RubyDoc: Fog::Compute::AWS::Addresses</a></li>
<li><a href="http://rubydoc.info/github/fog/fog/index">RubyDoc: Fog Alphabetic Index</a></li>
<li><a href="https://github.com/fog/fog/blob/master/lib/fog/aws/requests/compute/associate_address.rb">GitHub: fog - associate_address.rb</a></li>
<li><a href="http://opsrobot.com/post/9631423001/using-fog-for-attaching-aws-elastic-ip-addresses-to">Using fog for attaching AWS elastic ip addresses to servers</a></li>
<li><a href="http://fog.io/">Fog home site</a></li>
<li><a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html">AWS Documentation: Instance Metadata and User Data</a></li>
<li><a href="https://github.com/madebymade/aws-remap-elastic-ip">AWS Elastic IP remapper</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Winter in Thailand or from idea to reality: Part III - Visas]]></title>
    <link href="http://jakshi.github.com/blog/2013/01/19/winter-in-thailand-or-from-idea-to-reality-part-iii-visas/"/>
    <updated>2013-01-19T23:31:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2013/01/19/winter-in-thailand-or-from-idea-to-reality-part-iii-visas</id>
    <content type="html"><![CDATA[<h1>Intro</h1>

<p>I have air tickets to Thailand now, but that&#8217;s not all. Now I need visa to Thailand.</p>

<p>I will tell about getting visa to Thailand for Ukrainian citizens.</p>

<!-- more -->


<h1>Types of Thailand visas for Ukrainians</h1>

<ul>
<li>Visa on arrival, 15 days: you can get it in the airport. Sometimes you can be asked to prove that you have enough money and have air ticket from Thailand.</li>
<li>Single entry tourist visa, 2 monthes + can be prolong for 1 month for 1900 Baht: You need to process it in advance.</li>
<li>Double entry tourist visa, 2+1 monthes, fly out of Thailand, fly back and then again 2+1 monthes.: You need to process it in advance.</li>
<li>Business visa: about 1 year, I don&#8217;t look into this visa a lot becasue you need to have some buisness in Thailand.</li>
<li>Education visa: about 1 year, Nod bad, but you need to learn something in Thailand and pay money to some Thailand&#8217;s educational institution.</li>
</ul>


<h1>Which visa to choose?</h1>

<ul>
<li>Visa to arrival? definitely no, we need to stay for several monthes.</li>
<li>Tourist visa? Sounds good.</li>
<li>Buisness visa? I haven&#8217;t buisness in Thailand and don&#8217;t plan to create one.</li>
<li>Education visa? not bad, but more expensive than tourist visa (from 20000 Baht per year). And of course you will need spend time for learning.</li>
</ul>


<p>So after some thoughts I chose double entry tourist&#8217;s visa.</p>

<h1>Processing a visa</h1>

<p>I do a little trick for proccess Thailand visa easier - I outsource this work to Travel Agency :)
Of course each visa cost more for me(170$ instead of 90$), but I saved a lot of time and brain cells.</p>

<p>Also Travel Agency help us with processing medical insurrance for Thailand, it costs us about 150$ per person.</p>

<p>I provided following documents to process visas:
- Foreign passport
- Reference about your bank account state (you need to have more than 600$ on your bank account)
- Printed air tickets
- Insurance vouchers
- Reference from work that we have work place in Ukraine
- two 3x4 cm photos</p>

<p>I gave these documents to travel agency and in a week have my foreign passports with visa back.</p>

<p>if you proccess double-entry visas usually you need to provide airticket to Thailand and back for both entries. I didn&#8217;t have tickets for flying out of Thailand after 3 month (first part of double entry visa). I plan to decide later where to go. Luckily Travel agency where I proccessed visas resolve this for me, they booked additional tickets, get the visa for me and then cancel additional tickets. So I don&#8217;t need to think about <where to travel after 3 month in Thailand>  beforehand. As I got actually you can even don&#8217;t buy return ticket if you use travel agency service for proccess visas.</p>

<p>Okey, now I have our airticket, I have visa.</p>

<p>So I need to think thorougly which stuff to get with us, and even more thourougly which stuff don&#8217;t. I need to plan the travel, book hotel and gather info about how to live good in Thailand. I need prepare for trip.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2012 year sum up]]></title>
    <link href="http://jakshi.github.com/blog/2012/12/31/2012-year-sum-up/"/>
    <updated>2012-12-31T16:34:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2012/12/31/2012-year-sum-up</id>
    <content type="html"><![CDATA[<ul>
<li>Two important things that I did this year:

<ul>
<li>Went to big travel to Asia, living in Thailand during 2012/2013 winter.</li>
<li>Went for short travel to Greece and UAE.</li>
</ul>
</li>
</ul>


<!-- more -->


<ul>
<li>Most interesting/inspiring people I met this year:

<ul>
<li>Taxi driver Ali in UAE who can talk on 7 languages very good and knows about 15 languages not very well (but still can speak them)</li>
</ul>
</li>
<li>Two people that change my way to thinking this year:

<ul>
<li>Taxi driver Ali, I got that it&#8217;s not so hard to know a lot of languages, you need just speak a lot.</li>
<li>Stephen Nelson Smith, He tought me a lot about IT infra management and software development.</li>
</ul>
</li>
<li>Two new hobbies this year:

<ul>
<li>Snorkeling</li>
<li>Bycicle riding</li>
</ul>
</li>
<li>Two might-have-been dream in this year:

<ul>
<li>Buy own apartment</li>
<li>Learn how to build sites with RoR</li>
</ul>
</li>
</ul>


<h1>What did not go well</h1>

<p>I:</p>

<ul>
<li>still have not much money so a lot of plans still postponed</li>
<li>often find hard to concentrate on work</li>
<li>still not very good in choosing priorities</li>
<li>spend a lot of time on garabage things, like reading blogs, news and so on useless stuff</li>
<li>don&#8217;t pay enough attention to sport activity</li>
</ul>


<h1>What went well</h1>

<p>I:</p>

<ul>
<li>traveled a lot, it was life changing experience!</li>
<li>was programming more, My developer skills became better, I learn basics of Python and some Ruby too.</li>
<li>finished statistics course on <a href="https://www.coursera.org/">Coursera</a> and got again that learning is fun.</li>
<li>became quite good in writing <a href="http://www.opscode.com/chef/">opscode chef</a> recipes/cookbooks.</li>
<li>began to ride a bycicle again after 10 years of neglecting and was snorkeling in Mediterranean sea.</li>
<li>learnt how to <a href="http://jakshi.github.com/images/me_on_the_motor_scooter.jpg">drive motor scooter</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Winter in Thailand or from idea to reality: Part II - Air tickets]]></title>
    <link href="http://jakshi.github.com/blog/2012/12/15/winter-in-thailand-or-from-idea-to-reality-part-ii-air-tickets/"/>
    <updated>2012-12-15T13:02:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2012/12/15/winter-in-thailand-or-from-idea-to-reality-part-ii-air-tickets</id>
    <content type="html"><![CDATA[<h1>Intro</h1>

<p>So I need to buy air tickets to Thailand. After some thoughts we decide to buy air tickets to Bagkok, spent there several days, and then move to Ko Samui.</p>

<!-- more -->


<h1>Where to find cheapest ones?</h1>

<p>I doubt that I&#8217;ll say something new, but earlier you buy tickets - the cheaper they will get.
Because:</p>

<ul>
<li>most cheap tickets end up first.</li>
<li>most companies give you discount if you buy tickets in advance.</li>
</ul>


<p>Also you can try to search on <a href="http://en.wikipedia.org/wiki/List_of_low-cost_airlines">sites of low cost airways</a>, but this will need much more thorough planning of your trip, because low cost airlines are less agile then usual airlines.</p>

<p>Example of low cost airways for Thailand: <a href="http://www.airasia.com/my/en/home.page">AirAsia</a> or <a href="http://www.nokair.com/nokconnext/aspx/Index.aspx?currlang=en-US">NokAir</a>.</p>

<p>I use <a href="https://www.kayak.com/">KAYAK</a> to search for cheapest tickets. I bought tickets not early, so they cost me a lot - 900$ per person from Ukraine to Thailand and back.</p>

<p>After I found tickets on <a href="https://www.kayak.com/">KAYAK</a>, <a href="https://www.kayak.com/">KAYAK</a> provide me a choice of sites where I can book them.</p>

<p>I choose <a href="http://www.orbitz.com/">Orbitz</a>. it was a good choice. <a href="http://www.orbitz.com/">Orbitz</a> worked very well, there wasn&#8217;t any problems.</p>

<p>I bought tickets from Austrian Airways from Khrakov to Bangkok with one connection in Vienna.</p>

<p>Flight from Kharkov to Vienna was very good. Flight from Vienna to Bangkok in Boing 777 wasn&#8217;t so comfortable. They have very small chairs in those Boing 777 :)</p>

<p>btw For Ukrainian traveler there&#8217;s a good route to fly to Dubai, and then fly from Dubai to Bangkok. Looking back I see that idea with connection in Vienna wasn&#8217;t a best idea. Actually we flight from Kharkov to Vienna in reverse direction from Bangkok, so then we should fly 10 hours to Bangkok.</p>

<h1>Running a few step forward.</h1>

<p>Later I use <a href="https://www.kayak.com/">KAYAK</a> again to search for and book tickets to Ko Samui from Bangkok. There was a lot of problems with booking tickets with <a href="https://www.kayak.com/">KAYAK</a>. so I don&#8217;t recommend to book tickets with <a href="https://www.kayak.com/">KAYAK</a> itself, use it only for searching.</p>

<p>Problems was:</p>

<ul>
<li>They confirm booking</li>
<li>HOLD money on creditcard</li>
<li>Then canceled booking</li>
<li>Money on creditcard stayed on HOLD for 30 days</li>
</ul>


<p>I especially don&#8217;t like the last point.</p>

<p>I booked tickets that <a href="https://www.kayak.com/">KAYAK</a> cannot book for me on site of air company that make flight - it was <a href="http://www.bangkokair.com/eng">Bangkok Airways</a>, there wasn&#8217;t any problems.</p>

<p>So I got the air tickets, and now <a href="http://jakshi.github.com/blog/2013/01/19/winter-in-thailand-or-from-idea-to-reality-part-iii-visas/">I needed to get visa to Thailand.</a></p>

<h1>Further reading</h1>

<ul>
<li><a href="https://www.kayak.com/">KAYAK</a></li>
<li><a href="http://www.orbitz.com/">Orbitz</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resolving slow wifi issue with Centrino N 1030 BGN in Ubuntu 12.04 LTS]]></title>
    <link href="http://jakshi.github.com/blog/2012/11/26/resolving-slow-wifi-issue-with-centrino-n-1030-bgn-in-ubuntu-12-dot-04-lts/"/>
    <updated>2012-11-26T12:03:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2012/11/26/resolving-slow-wifi-issue-with-centrino-n-1030-bgn-in-ubuntu-12-dot-04-lts</id>
    <content type="html"><![CDATA[<h1>Introduction</h1>

<p>I&#8217;ve bumped into issue with Intel Centrino Wireless-N 1030 BGN WiFi adapter under Ubuntu Linux 12.04 LTS.
It works extremely slow with some WiFi AP.</p>

<!-- more -->


<h1>How to fix</h1>

<p>After some investigation I clarify that you need to switch off 802.11n for Centrino Wireless-B 1030 BGN WiFi adapter, then adapter will work good with all AP.
I think that some of AP realize 802.11n protocol in not correct way, And this confuses Centrino WiFi adapter.</p>

<h2>Switch off 802.11n</h2>

<pre><code>sudo rmmod iwlwifi
sudo modprobe iwlwifi 11n_disable=1
</code></pre>

<h2>Switch on 802.11n</h2>

<pre><code>sudo rmmod iwlwifi
sudo modprobe iwlwifi 11n_disable=0
</code></pre>

<h2>Permanently switch off 802.11n</h2>

<pre><code>emacs /etc/modprobe.d/iwlwifi-disable11n.conf
options iwlwifi 11n_disable=1
</code></pre>

<h1>Further reading</h1>

<ul>
<li><a href="http://askubuntu.com/questions/130499/how-do-i-fix-slow-wireless-on-intel-wireless-cards">How do I fix slow wireless on Intel wireless cards?</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Winter in Thailand or from idea to reality: Part I - Why Thailand?]]></title>
    <link href="http://jakshi.github.com/blog/2012/11/20/winter-in-thailand-or-from-idea-to-reality-part-i-why-thailand/"/>
    <updated>2012-11-20T22:09:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2012/11/20/winter-in-thailand-or-from-idea-to-reality-part-i-why-thailand</id>
    <content type="html"><![CDATA[<h1>Introduction</h1>

<p>I want to write several articles about living Thailand. Of course a lot of people have been there, so my articles could look a little trite, but, on the other hand - why not? May be my experience will be useful for somebody.</p>

<h1>About remote work and living in foreign countries</h1>

<p>Many of remote workers can easily work everywhere if there&#8217;s an fair internet connection. If you like to travel - mix travel and work look like a very attractive idea.</p>

<p>When you are on usual holiday you hardly learn a lot about foreign country during those two weeks. But if you live and work in there for several month - Oh you can tell a lot about it.</p>

<p>Also different places of world have different features, may be you&#8217;ll like some of them.</p>

<!-- more -->


<h1>Why Thailand?</h1>

<p>I like weather to be warm. I like sea, fruits and learning foreign languages. Also I&#8217;m a remote worker, so I need fair internet connection.</p>

<p>As winter begin to come - I thought, may be it&#8217;d be great to move to some warm place? I&#8217;m not rich DevOp from Ukraine so this place should have prices comparable with Ukraine ones.</p>

<p>So after some comparision and reading different sources I choose Thailand. How it looks from internet?</p>

<p>Pros:</p>

<ul>
<li>it&#8217;s cheap to live here, about the same prices as living costs in Ukraine.</li>
<li>A lot of tasty and fresh fruits, vegetables and seafood.</li>
<li>Sea available</li>
<li>It&#8217;s warm here, no winter at all</li>
<li>Crime rates are low, people are friendly and positive.</li>
<li>Internet is good, mostly ADSL as wired connection and also there&#8217;s a several 3G operators with good coverage.</li>
</ul>


<p>Cons:</p>

<ul>
<li>A lot of insects here</li>
<li>It&#8217;s a little too hot here</li>
<li>a few people in Thailand speak english, you will need to learn Thai to have full living experience here.</li>
</ul>


<p>Running ahead, I should tell that all these stuff appear to be true, when I&#8217;ve come to Thailand.</p>

<p>It looks good for me - so I choose Thailand, that lead me to next step:</p>

<h1>Thailand is big, where to go?</h1>

<p>We need:</p>

<ul>
<li>sea around</li>
<li>some infrastructure (water, electricity, internet and so on)</li>
<li>it would be great if place wasn&#8217;t noisy - so we could work without disturbances.</li>
<li>not very expensive to live</li>
</ul>


<p>Candidates:</p>

<p>After some investigation about Thailand I choose several places to go.</p>

<h2>Koh Samui</h2>

<ul>
<li>pros:

<ul>
<li>good beaches</li>
<li>serene place</li>
<li>it&#8217;s romantic to live on the tropical island</li>
</ul>
</li>
<li>cons:

<ul>
<li>small island, so not so much infrastructure (supermarkets are still here though)</li>
<li>more expensive than (for example) Bangkok</li>
<li>on some parts of island internet is not very good</li>
</ul>
</li>
</ul>


<h2>Hua Hin:</h2>

<ul>
<li>pros:

<ul>
<li>internet is better than on islands.</li>
<li>prices are decent.</li>
<li>good beaches.</li>
</ul>
</li>
<li>cons:</li>
</ul>


<h2>Phuket:</h2>

<ul>
<li>pros:

<ul>
<li>medium island with bridge to continent, easy to go somewhere</li>
<li>You&#8217;ll still live on tropical island</li>
<li>relatively good internet</li>
</ul>
</li>
<li>cons:

<ul>
<li>more expensive than Samui (which&#8217;s not very cheap!)</li>
</ul>
</li>
</ul>


<h2>Krabi</h2>

<ul>
<li>pros:

<ul>
<li>good beaches</li>
<li>there&#8217;re good climbing sites (I like climbing)</li>
<li>good for snorkeling (I like snorkeling too)</li>
</ul>
</li>
<li>cons:

<ul>
<li>more expensive than Samui (which&#8217;s not very cheap!)</li>
<li>internet isn&#8217;t very good there</li>
</ul>
</li>
</ul>


<h2>Pattaya</h2>

<ul>
<li>pros:

<ul>
<li>good infrastructure (internet, super markets and so on)</li>
</ul>
</li>
<li>cons:

<ul>
<li>noisy and messy place, a lot of night life</li>
<li>it&#8217;s expensive to live there</li>
</ul>
</li>
</ul>


<p>After some thoughts I decided to go to Koh Samui, I like serene places, and it&#8217;s not too expensive to live there. May be I&#8217;ll try Hua Hin next year.</p>

<p>So now I know where to go, that lead me to the next step - <a href="http://jakshi.github.com/blog/2012/12/15/winter-in-thailand-or-from-idea-to-reality-part-ii-air-tickets/">I needed to buy air tickets to Thailand.</a></p>

<h1>Further reading</h1>

<ul>
<li><a href="http://en.wikipedia.org/wiki/List_of_cities_in_Thailand">List of cities in Thailand</a></li>
<li><a href="http://www.thaivisa.com/forum/">Big forum about Thailand</a></li>
<li><a href="http://www.thaivisa.com/forum/forum/30-koh-samui-koh-phangan-koh-tao/">Section of Big forum about Thailand, Koh Samui island</a></li>
</ul>

]]></content>
  </entry>
  
</feed>

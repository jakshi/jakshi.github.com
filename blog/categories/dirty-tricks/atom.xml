<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dirty tricks | DevOp's Blog]]></title>
  <link href="http://jakshi.github.com/blog/categories/dirty-tricks/atom.xml" rel="self"/>
  <link href="http://jakshi.github.com/"/>
  <updated>2015-06-11T14:21:33+08:00</updated>
  <id>http://jakshi.github.com/</id>
  <author>
    <name><![CDATA[jakshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rewriting your email in git commits]]></title>
    <link href="http://jakshi.github.com/blog/2014/01/25/rewriting-your-email-in-git-commits/"/>
    <updated>2014-01-25T18:57:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2014/01/25/rewriting-your-email-in-git-commits</id>
    <content type="html"><![CDATA[<p>Sometimes you need to rewrite your email in your commits in some git repository.
Do it with command:</p>

<pre><code>git filter-branch --env-filter 'if [ $GIT_AUTHOR_EMAIL = bad@email ]; then GIT_AUTHOR_EMAIL=correct@email; fi; export GIT_AUTHOR_EMAIL'
</code></pre>

<p>For your collaborators this operatioin might be dangerous. According to <a href="http://stackoverflow.com/users/46058/jakub-narebski">Jakub NarÄ™bski</a> collaborators will need to:</p>

<ul>
<li>if they didn't base their work on history pre-rewrite, just <code>git reset --hard origin/master</code> or just <code>git pull origin</code> (which should fast-forward).</li>
<li>If they based their change, they have to rebase using <code>git rebase origin/master</code> or just <code>git pull --rebase origin</code></li>
</ul>


<p>More info:</p>

<ul>
<li><a href="http://stackoverflow.com/questions/3401732/rewrite-author-in-history">Stackoverflow: Rewrite author in history</a></li>
<li><a href="http://git-scm.com/book/ch6-4.html">Pro Git Book: 6.4 Git Tools - Rewriting History</a></li>
</ul>

]]></content>
  </entry>
  
</feed>

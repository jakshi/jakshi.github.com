<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: serverspec | DevOp's Blog]]></title>
  <link href="http://jakshi.github.com/blog/categories/serverspec/atom.xml" rel="self"/>
  <link href="http://jakshi.github.com/"/>
  <updated>2015-06-11T14:21:33+08:00</updated>
  <id>http://jakshi.github.com/</id>
  <author>
    <name><![CDATA[jakshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Accessing chef attributes in serverspec tests]]></title>
    <link href="http://jakshi.github.com/blog/2014/05/12/accessing-chef-attributes-in-serverspec-tests/"/>
    <updated>2014-05-12T01:45:00+08:00</updated>
    <id>http://jakshi.github.com/blog/2014/05/12/accessing-chef-attributes-in-serverspec-tests</id>
    <content type="html"><![CDATA[<p>I presume that you are familiar with:</p>

<ul>
<li>Chef</li>
<li>test-kitchen</li>
<li>serverspec</li>
</ul>


<p>When you write serverspec integration tests, it would be great to have access to chef attributes of cookbook that you're testing.
There's a fast and simple way to do this.</p>

<!-- more -->


<h1>Introduction</h1>

<p><code>
cat attributes/default.rb
</code></p>

<p><code>
override['backup']['dependencies'] = [['fog'],['aws-s3']]
</code></p>

<p>Let's say we want this attribute in your serverspec tests.</p>

<p>How can we do that?</p>

<ul>
<li>Dump chef attributes to JSON file with helper cookbook</li>
<li>Load this file from serverspec tests</li>
</ul>


<h1>Dump chef attributes</h1>

<h2>Create fixture cookbook</h2>

<p><code>
emacs test/fixtures/cookbooks/test-helper/metadata.rb
</code></p>

<p>```
name             'test-helper'
maintainer       'John Smith'
maintainer_email 'john@example.com'
license          'Apache 2.0'
description      'Dumps chef node data to json file'
long_description IO.read(File.join(File.dirname(<strong>FILE</strong>), 'README.md'))
version          '0.0.1'</p>

<p>recipe 'default', 'Dumps chef node data to json file'</p>

<p>%w{ ubuntu debian }.each do |os|
  supports os
end
```</p>

<p><code>
emacs test/fixtures/cookbooks/test-helper/recipes/default.rb
</code></p>

<p>```
chef_gem 'activesupport'</p>

<p>require 'pathname'
require 'active_support/core_ext/hash/deep_merge'</p>

<p>directory '/tmp/serverspec' do
  recursive true
end</p>

<p>file '/tmp/serverspec/node.json' do
  owner "root"
  mode "0400"
end</p>

<p>log "Dumping attributes to '/tmp/serverspec/node.json."</p>

<p>ruby_block "dump_node_attributes" do
  block do</p>

<pre><code>require 'json'

attrs = {}

attrs = attrs.deep_merge(node.default_attrs) unless node.default_attrs.empty?
attrs = attrs.deep_merge(node.normal_attrs) unless node.normal_attrs.empty?
attrs = attrs.deep_merge(node.override_attrs) unless node.override_attrs.empty?

recipe_json = "{ \"run_list\": \[ "
recipe_json &lt;&lt; node.run_list.expand(node.chef_environment).recipes.map! { |k| "\"#{k}\"" }.join(",")
recipe_json &lt;&lt; " \] }"
attrs = attrs.deep_merge(JSON.parse(recipe_json))

File.open('/tmp/serverspec/node.json', 'w') { |file| file.write(JSON.pretty_generate(attrs)) }
</code></pre>

<p>  end
end
```</p>

<p><code>
echo "This a cookbook for dumping chef node attributes to specific location to json formated file." &gt; test/fixtures/cookbooks/test-helper/README.md
</code></p>

<h2>Add it to .kitchen.yml</h2>

<p><code>
emacs .kitchen.yml
</code></p>

<h2>```</h2>

<p>driver:
  name: digitalocean
  region: amsterdam 2
  flavor: 512MB</p>

<p>provisioner:
  name: chef_solo</p>

<p>platforms:
  - name: ubuntu-12.04</p>

<p>suites:
  - name: default</p>

<pre><code>run_list:
  - recipe[my_cookbook::default]
  - recipe[test-helper::default]
attributes:
</code></pre>

<p>```</p>

<h2>Add cookbook helper to Berksfile</h2>

<p><code>
emacs Berksfile
</code></p>

<p>```
source "http://api.berkshelf.com"</p>

<p>metadata</p>

<p>group :integration do
  cookbook 'test-helper', path: 'test/fixtures/cookbooks/test-helper'
end
```</p>

<p><code>
berks update
</code></p>

<h1>Load chef attributes</h1>

<p><code>
emacs test/integration/default/serverspec/spec_helper.rb
</code></p>

<p>```
require 'serverspec'
require 'pathname'
require 'net/http'
require 'net/smtp'
require 'json'</p>

<p>set :backend, :exec</p>

<p>$node = ::JSON.parse(File.read('/tmp/serverspec/node.json'))
```</p>

<h1>Use chef attributes in tests</h1>

<p>```
require 'spec_helper'</p>

<p>describe 'my_cookbook' do</p>

<p>  context 'dependencies recipe. It' do</p>

<pre><code>$node['backup']['dependencies'].each do |bgem|
  it "installs backup gem dependency: #{bgem[0]}" do
    expect(package bgem[0]).to be_installed.by('gem')
  end
end
</code></pre>

<p>  end</p>

<p>end
```</p>

<h1>Conclusion</h1>

<p>if you execute:</p>

<p><code>
kitchen verify
</code></p>

<p>you should see:
```
my_cookbook
  dependencies recipe. It</p>

<pre><code>installs backup gem dependency: fog       
installs backup gem dependency: aws-s3       
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
